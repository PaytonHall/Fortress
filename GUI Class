using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Group_Project_Fortress
{
    public partial class Form1 : Form
    {
       

     
            public Form1()
            {
                InitializeComponent();
             //ADD SHAWNS CLASS CALL IT MYNUM: mynum
             //ADD NATALIES CLASS CALL IT MYBASE: mybase
        }


            //A list of all the variables we will need.
            int baseone = 50;
            int basetwo = 50;

            int onecard1;
            int onecard2;
            int onecard3;

            int twocard1;
            int twocard2;
            int twocard3;
            int cardBox;
            int roundcounter;

            int[] cards = new int[5];
            int[] right = new int[3];
            int[] left = new int[3];

            Random rnd = new Random();



            //This method will clear all the text boxes and boards and things.
            //This method will refresh the numbers in each spot at the begining of each round.
            //It clears the boxes that need to be cleared and then sets the new numbers that have been calculated.
            public void startround()
            {
                //call this method to shawn:
                mynum.subtract();





                for (int i = 0; i == cards.Length; i++)
                {
                    cards[i] = 0;


                }
                for (int i = 0; i == right.Length; i++)
                {
                    right[i] = 0;
                    left[i] = 0;
                }

                //reset all data and colors to text box.


                LeftCard1.BackColor = Color.White;
                LeftCard2.BackColor = Color.White;
                LeftCard3.BackColor = Color.White;
                RightCard1.BackColor = Color.White;
                RightCard2.BackColor = Color.White;
                RightCard3.BackColor = Color.White;

                LeftCard1.Text = "";
                LeftCard2.Text = "";
                LeftCard3.Text = "";
                RightCard1.Text = "";
                RightCard2.Text = "";
                RightCard3.Text = "";

                cardBox.Text = "";

                roundcounter++;

                //set health each time
                //base1 and base2
                //The health will be updated at the end of each round.

                mybase.basehealth(ref baseone, ref basetwo);

                base1.Text = $"{baseone}";
                base2.Text = $"{basetwo}";




            //send test to natalie to see if anyone won1!
            if (mybase.Health() = false)
                {
                    MessageBox.Show("Wow! Good Game! Thanks For Playing!!!");
                    this.Close();


                }
            }


            //this method will be active once all the boxes have been inputed with correct numbers. 
            //Once that happens, all the boxes will be revealed, then the calculations will be sent to the numbers class.
            //Send numbers to shawn.
            //recieve numbers later.
            public void battle()
            {
                //when the button is clicked, run this:

            }
            //-----------------------------------------------------------
            //-----------------------------------------------------------
            //-----------------------------------------------------------
            //THIS IS ALL THE CHECKING FOR EACH BOX
            //-----------------------------------------------------------
            //-----------------------------------------------------------
            //-----------------------------------------------------------
            private void RightCard3_Leave(object sender, EventArgs e)
            {
            bool chekc = mynum.rightValues(int.Parse(RightCard3.Text), 2);





            if (chekc != true)
            {

                MessageBox.Show($"{RightCard3.Text} is not one of the cards, try again.");
                RightCard3.Clear();

                RightCard3.Focus();


            }
            else
            {
                RightCard3.BackColor = Color.Black;
            }

        }
        private void RightCard2_Leave(object sender, EventArgs e)
            {
                //When I leave the box, run this method.

                bool chekc = mynum.rightValues(int.Parse(RightCard2.Text), 1);





                if (chekc != true)
                {

                    MessageBox.Show($"{RightCard2.Text} is not one of the cards, try again.");
                    RightCard2.Clear();

                    RightCard2.Focus();


                }
                else
                {
                    RightCard2.BackColor = Color.Black;
                }

            }
            private void RightCard1_Leave(object sender, EventArgs e)
            {
                //When I leave the box, run this method.
                bool chekc = mynum.rightValues(int.Parse(RightCard1.Text), 0);





                if (chekc != true)
                {

                    MessageBox.Show($"{RightCard1.Text} is not one of the cards, try again.");
                    RightCard1.Clear();

                    RightCard1.Focus();


                }
                else
                {
                    RightCard1.BackColor = Color.Black;
                }

            }
            private void LeftCard3_Leave(object sender, EventArgs e)
            {

        }
        private void LeftCard2_Leave(object sender, EventArgs e)
            {
                bool chekc = mynum.leftValues(int.Parse(LeftCard2.Text), 1);





                if (chekc != true)
                {

                    MessageBox.Show($"{LeftCard2.Text} is not one of the cards, try again.");
                    LeftCard2.Clear();

                    LeftCard2.Focus();


                }
                else
                {
                    LeftCard2.BackColor = Color.Black;
                }

            }
        private void LeftCard1_Leave(object sender, EventArgs e)
        {
            bool chekc = mynum.leftValues(int.Parse(LeftCard1.Text), 0);





            if (chekc != true)
            {

                MessageBox.Show($"{LeftCard1.Text} is not one of the cards, try again.");
                LeftCard1.Clear();

                LeftCard1.Focus();


            }
            else
            {
                LeftCard1.BackColor = Color.Black;
            }
        }



        private void button1_Click(object sender, EventArgs e)
            {

            
        }
    }
}
